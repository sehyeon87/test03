<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="tranNo" 			column="tran_no" 			jdbcType="INTEGER"/>
<!-- 		<result property="purchaseProd.prodNo"		column="prod_no"			jdbcType="INTEGER"/> -->
<!-- 		<result property="buyer.userId"			column="buyer_id" 			jdbcType="VARCHAR"/> -->
		<result property="paymentOption"	column="payment_option"		jdbcType="VARCHAR"/>
		<result property="receiverName"		column="receiver_name"		jdbcType="VARCHAR"/>
		<result	property="receiverPhone"	column="receiver_phone"		jdbcType="VARCHAR"/>
		<result property="divyAddr"			column="demailaddr"			jdbcType="VARCHAR"/>
		<result property="divyRequest"		column="divyRequest"		jdbcType="VARCHAR"/>
		<result property="tranCode"			column="tran_status_code"	jdbcType="VARCHAR"/>
		<result property="orderDate"		column="order_data"			jdbcType="DATE"/>
		<result property="divyDate"			column="divy_date"			jdbcType="DATE"/>
		
		<association property="purchaseProd" javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
			<result property="prodName" 	column="prod_name" 			jdbcType="VARCHAR"/>
			<result property="price" 		column="price" 				jdbcType="NUMERIC"/>
			<result property="proTranCode"	column="tran_status_code"	jdbcType="VARCHAR"/>
		</association>
		
		<association property="buyer" javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction 
		VALUES	 (	seq_transaction_tran_no.nextval, #{purchaseProd.prodNo},#{buyer.userId}, #{paymentOption}, #{receiverName}, #{receiverPhone}, #{divyAddr},
		#{divyRequest:VARCHAR}, #{tranCode}, SYSDATE, #{divyDate:DATE} )			
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="integer"	resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr,
		dlvy_request, tran_status_code, order_data, dlvy_date 
		FROM transaction
		WHERE tran_no = #{value}
	 </select>
	
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		payment_option = #{paymentOption},
	   		receiver_name = #{receiverName},
	   		receiver_phone = #{receiverPhone},
	   		demailaddr = #{divyAddr},
	   		dlvy_request = #{divyRequest:VARCHAR},
	   		dlvy_date = #{divyDate:DATE}
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 <update id="updateTranCode" parameterType="map">
	 	UPDATE transaction 
	 	<choose>
	 		<when test="product != null">
			 	SET tran_status_code = #{product.tranCode}
			 	WHERE prod_no = #{product.purchaseProd.prodNo}
	 		</when>
	 		<when test="purchase != null">
			 	SET tran_status_code = #{purchase.tranCode}
			 	WHERE tran_no = #{purchase.tranNo}
	 		</when>
	 	</choose>
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<!-- purchase list -->
	<sql id="purchaseListSql">
		SELECT t.tran_no, RTRIM(t.tran_status_code) tran_status_code, t.prod_no, t.buyer_id,
		t.receiver_phone, p.prod_name, p.price,
		ROW_NUMBER() OVER(ORDER BY t.tran_status_code, t.order_data) rnum
			 FROM transaction t, product p
			 WHERE t.prod_no = p.prod_no 
			 	AND tran_status_code != '0'
			 	AND t.buyer_id = '${buyer}'
			 ORDER BY t.tran_no
	</sql>
<!-- 	sale list -->
	 <sql id="saleListSql">
	 	SELECT t.tran_no, RTRIM(t.tran_status_code) tran_status_code, t.prod_no, t.buyer_id,
		t.receiver_phone, p.prod_name, p.price,
		ROW_NUMBER() OVER(ORDER BY t.tran_status_code, t.order_data) rnum
			 FROM transaction t, product p
			 WHERE t.prod_no = p.prod_no 
				AND tran_status_code != '0'
	 </sql> 
	<select  id="getList"  parameterType="map"	resultMap="purchaseSelectMap">
	  SELECT inner_table.* FROM
			(
			<choose>
				<when test="search.menu == 'manage'">
					<include refid="saleListSql"/>
				</when>
				<when test="search.menu == 'search'">
					<include refid="purchaseListSql"/>
				</when>
			</choose>
			) inner_table 
		WHERE rnum BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	 </select>				
	 
	 	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	
	  		<choose>
	  			<when test="search.menu=='manage'">
	  				<include refid="saleListSql"/>
	  			</when>
	  			<when test="search.menu=='search'">
	  				<include refid="purchaseListSql"/>
	  			</when>
	  		</choose>
	  	) countTable						
	 </select>
	 
	 
</mapper>