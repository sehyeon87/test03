<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 		column="prod_no" 			jdbcType="INTEGER"/>
		<result property="prodName"		column="prod_name" 			jdbcType="VARCHAR"/>
		<result property="prodDetail"	column="prod_detail"		jdbcType="VARCHAR"/>
		<result property="price"		column="price"				jdbcType="INTEGER"/>
		<result property="fileName"		column="image_file"			jdbcType="VARCHAR"/>
		<result	property="manuDate"		column="manufacture_day"	jdbcType="VARCHAR"/>
		<result property="regDate" 		column="reg_date" 			jdbcType="DATE"/>
		<result property="proTranCode" column="tran_status_code" 	jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product( prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date) 
		VALUES	 (	seq_product_prod_no.nextval, #{prodName}, #{prodDetail:VARCHAR},
			#{fileName:VARCHAR}, #{price}, #{manuDate:VARCHAR}, SYSDATE )			
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="integer"	resultMap="productSelectMap">
		SELECT
		p.prod_no , p.prod_name ,p.prod_detail, p.price, p.image_file, p.manufacture_day, p.reg_date,
		RTRIM(NVL(t.tran_status_code, '0')) tran_status_code
		FROM product p, transaction t
		WHERE p.prod_no = t.prod_no(+) AND p.prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name =		#{prodName},
	   		prod_detail =	#{prodDetail},
	   		price =			#{price},
	   		manufacture_day=#{manuDate}	   		
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<sql id="productList">
		SELECT p.prod_no , p.prod_name , p.prod_detail, p.price, p.manufacture_day,
	  		 p.reg_date, 
		  	NVL(t.tran_status_code,'0') tran_status_code,
	  		ROW_NUMBER() OVER(ORDER BY 
	  		<choose>
	  			<when test="sort == 1">
			  		price ASC,
	  			</when>
	  			<when test="sort == 2">
	  				price DESC,
	  			</when>
	  		</choose>
	  		p.prod_no, prod_name, reg_date) rnum
			FROM product p, transaction t
				<where>
					p.prod_no = t.prod_no(+)
					<if test="searchCondition != null">
						<if test="searchCondition == 0 and searchKeyword !='' ">
							AND p.prod_no LIKE #{searchKeyword}
						</if>
						<if test="searchCondition == 1 and searchKeyword !='' ">
							AND p.prod_name LIKE #{searchKeyword}
						</if>
						<if test="searchCondition == 2 and searchKeyword !='' ">
							AND p.price LIKE #{searchKeyword}
						</if>
					</if>				
					AND tran_status_code IS NULL										
				</where>
	</sql>
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  SELECT * FROM (	
	  	SELECT inner_table.* , ROWNUM AS row_seq
	  	FROM (	
			<include refid="productList"/>
			) inner_table
			WHERE rnum &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	
	  		<include refid="productList"/>
	  	) countTable						
	 </select>
	 
</mapper>